# Exercises

> In your own words, explain what clean code is and why it is important.

A: I think clean code is analogous to grammatically correct English (or French, Spanish, etc.). If I were to use misplaced modifiers, bad spelling, run-on sentences, etc., the reader or listener might understand what I'm saying (IN SPITE of what I'm saying :)   ), or they might not. In every day converstations this confusion might not be a big deal, but in a professional environment, bad grammar can make you appear less intelligent, capable, etc. In a more serious environment, say, in a hospital, incorrect grammar could cause ambiguity and confusion that could endanger a patient's life. Since computers and their codes are now responsible for handling all kinds of important tasks (ex: handling traffic lights), it's vitally important that code is written clean.

> ...think about another commonly used object that relies on computers and explain what would happen if the code was not created to an acceptable standard.

A: As the article mentioned, the medical industry is a safety-critical field. Though I am not well versed in medical equipment, I'm fairly certain that an EKG monitor is common in hospitals, and undoubtedly the lives of patients would be at risk if the EKG's were poorly programmed.  

> 3. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.

A: I wouldn't consider this code to be clean, because I had no clue what `x`, `y`, `z`, etc. represented or what this function does, until I got to the third line that mentions temperature properties. The lines of comments are unnecessary. Instead of using conditionals, we can extract methods. I would refactor it to something like: 

```
FUNCTION convertToCelsius(fahrenheit)
	temperatureCelsius = (fahrenheit - 32) * (5 / 9)
	RETURN temperatureCelsius
END FUNCTION

FUNCTION convertToFahrenheit(celsius)
	fahrenheit = celsius * (9 / 5) + 32
	RETURN fahrenheit
END FUNCTION

FUNCTION checkTemperatureUnit(fahrenheit, celsius)
	IF fahrenheit THEN
		CALL convertToCelsius
	ELSE IF celsius THEN
		CALL convertToFahrenheit
	ELSE
		PRINT "Invalid entry, temperature must be in celsius or fahrenheit"
	ENDIF
END FUNCTION
```

> 4. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.

A: It's not clean, because: the function name is using an abbreviation, 

```
FUNCTION calculatePercent(sum, total)
	IF total equals 0 THEN
		RETURN "Sorry, cannot divide by 0"
	ELSE 
		SET percentage to ( (sum / total) * 100 )
	END IF
	
	PRINT percentage
END FUNCTION
```

> 5 a. ...The following function prints the subtotal of a customer's transaction and receives payment accordingly.

A: 

```
FUNCTION checkOutCustomer(SubTotal, DiscountRate, PaymentType)
    SET DiscountedTotal to SubTotal * DiscountRate
    SET TaxAmount to SubTotal * tax 
    PRINT "Your total due is: " + DiscountedTotal + TaxAmount
    IF PaymentType = 'CASH' THEN
       CALL getPayment RETURNING Amount
       PRINT "Change due: " + Amount - DiscountedTotal + TaxAmount
    ELSE IF PaymentType = 'CREDIT CARD' THEN
       CALL GetPayment RETURNING Amount
       PRINT "Your credit card has been charged: " + DiscountedTotal + TaxAmount
    END IF
END FUNCTION
```

> 5 b

A: 
```
FUNCTION checkoutBook(book, guest)
    IF guest.accountActive THEN
	CALL guestAccountInfo
	PRINT "Your books have been issued."
    ELSE 
        PRINT "Unable to check out book."
    END IF
END FUNCTION


FUNCTION guestAccountInfo(book, guest)
    IF (NOT guest.hasOverdueBooks) AND (guest.outstandingFees = 0) THEN
	APPEND book to guest.books
	SET book.status to "Checked Out"
    END IF
END FUNCTION
```

> 5 c

A: 
```
CLASS BankAccount

 FUNCTION displayBalance
    PRINT balance
 END FUNCTION

 FUNCTION deposit(amount)
    SET balance to balance + amount
 END FUNCTION

 FUNCTION withdraw(amount)
     IF balance > amount THEN
       SET balance to balance - amount
     END
 END FUNCTION

END



CLASS BankOffers

 FUNCTION creditCardOffer
     IF NOT(customer.hasCreditCard) THEN
         CALL offerCreditCard
     END
 END FUNCTION

 FUNCTION checkStatus
     IF NOT(customer.hasCheckingAccount) THEN
         CALL offerCheckingAccount
     END
 END FUNCTION

 ....
 ....
 ....

END
```

		
# Programming Questions

> 6. Square. Given an array of integers, find out whether the sum of the integers is a perfect square. If it is a perfect square, return the square root, otherwise return the sum

A: 
```
function findPerfectSquare(numbers) {
	
	var numbersSum = numbers.reduce( (total, number) => total + number);
	
	var squareRoot = Math.sqrt(numbersSum);
    
	if (Number.isInteger(squareRoot) ) {
		
		return squareRoot;
    
	} else if (!Number.isInteger(squareRoot) ) {
		
		return numbersSum;
    
	} else return "Unknown error"
;
}
```

> 7. Duplicate Given an array of integers, find out whether the array contains any duplicate elements. The function should return true if any value appears at least twice in the array, and false if every element is distinct.

A: 
```
function isDuplicate(randomNumbers) {
	
	var sortedNums = randomNumbers.slice().sort(); 
	
	var results = [];
	
	for (var i = 0; i < sortedNums.length - 1; i++) {
    	
		if (sortedNums[i + 1] == sortedNums[i]) {
        	
			results.push(sortedNums[i]);
    	
		}
	
	}

	
	if(results == [] ) {
		
		return "false";
    
	} else return "true"
	 
};
```