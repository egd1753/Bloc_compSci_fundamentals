# Exercises

> 1. A line of people at an amusement park ride.....

A:
```javascript
(a)
let members = ["Vivian", "Ava", "Josh", "Patrick", "Mike"];

(b)
function addMember(name) {
   members.push(name);
   return "New member successfully added!";
}	

addMember("Mary");

(c), (d)
function findMember(name) {
	
   if (members.indexOf(name) == -1) {
		
      return "Error: Unable to find this member";
	
   } else {
		
      return members.indexOf(name);
	
   }

}

findMember("Josh");

findMember("Emily");

(e)
function insertCuttingMember(newName, memberName) {
   let memberNameIndex = findMember(memberName);
   if (typeof memberNameIndex != 'number') {
      return "Error: Cannot insert new member because the person they're cutting in front of doesn't exist in members array";
   }
   else {
      members.splice(memberNameIndex, 0, newName);
      return "New member successfully added!";
   }
}

insertCuttingMember("Melissa", "Ava");

(f)
function removeMember(name) {
   let memberIndex = findMember(name);
   if (typeof memberIndex != 'number') {
      return "Error: Cannot delete, no such member found";
   } else {
      members.splice(memberIndex, 1);
      return name + " was successfully deleted";
   }
}

removeMember("Patrick");

```

> Provide another real-world example that you can model using a data structure.

A: Organized books in a library can be modeled using a data structure.

> How would your data structure allow developers to access and manipulate the data?

A: Most libraries use the Dewey Decimal System, which introduced the concepts of relative location and relative index. Books are assigned numerical values based on their topics (classes), and books can be further subdivided by adding fractional decimals to the topic/class number. A developer could assign values to new books, allowing other developers to know the location of these books relative to the books around them.   

